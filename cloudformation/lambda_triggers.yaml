AWSTemplateFormatVersion: "2010-09-09"
Description: "Lambda trigger for investing scrapping"

Resources:
  LambdaSuperUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: LambdaSuperUser
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        # a stock AWS policy that includes Cloudwatch Logs and S3 access
        - arn:aws:iam::aws:policy/AWSLambdaExecute

      Path: /
      Policies:
          - PolicyName: "SuperUser"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                # allow lambda to describe instances
                - Effect: "Allow"
                  Action: "*"
                  Resource: "*"


  LambdaInvestingExecution:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: preti-lambda-triggers
        S3Key: scripts/lambda.zip
      Description: "Start investing scrapping stack"
      FunctionName: "stack_creation"
      Handler: "scheduler.handle_stack_creation"
      MemorySize: 128
      Role: !GetAtt ["LambdaSuperUserRole","Arn"]
      Runtime:  python2.7
      Timeout: 300

  ScheduleInvesting:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "cron(00 22 * * ? *)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt ["LambdaInvestingExecution","Arn"]
          Id: "TargetFunctionV1"

  LambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !GetAtt ["LambdaInvestingExecution","Arn"]
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ["ScheduleInvesting", "Arn"]



  LambdaInvestingCleanup:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: preti-lambda-triggers
        S3Key: scripts/lambda.zip
      Description: "Clean up investing scrapping stack"
      FunctionName: "stack_cleanup"
      Handler: "scheduler.handle_stack_removal"
      MemorySize: 128
      Role: !GetAtt ["LambdaSuperUserRole","Arn"]
      Runtime:  python2.7
      Timeout: 300


  ScheduleCleanup:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "cron(00 07 * * ? *)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt ["LambdaInvestingCleanup","Arn"]
          Id: "TargetFunctionV2"

  LambdaCleanupPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !GetAtt ["LambdaInvestingCleanup","Arn"]
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ["ScheduleCleanup", "Arn"]


